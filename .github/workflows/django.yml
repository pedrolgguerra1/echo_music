name: Deploy to PythonAnywhere

on:
  push:
    branches:
      - main  # dispara o workflow sempre que houver push na branch main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"  # ajuste conforme sua versão no PythonAnywhere

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: |
          # rode seus testes aqui (opcional)
          # se não houver testes ainda, isso será ignorado
          echo "Running Django checks..."
          python manage.py check

      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput

  deploy:
    name: Deploy to PythonAnywhere
    runs-on: ubuntu-latest
    needs: build  # só executa o deploy se o build for bem-sucedido

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to PythonAnywhere via API
        env:
          PYTHONANYWHERE_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
        run: |
          echo "Triggering PythonAnywhere reload..."
          curl -X POST \
            https://www.pythonanywhere.com/api/v0/user/alvezz/webapps/alvezz.pythonanywhere.com/reload/ \
            -H "Authorization: Token $PYTHONANYWHERE_API_TOKEN"
